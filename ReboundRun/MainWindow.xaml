<?xml version="1.0" encoding="utf-8"?>
<winuiex:WindowEx
    x:Class="ReboundRun.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ReboundRun"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:winuiex="using:WinUIEx"
    mc:Ignorable="d">

    <Grid>
        <Grid.Resources>
            <Style x:Key="AccentSplitButtonStyle" TargetType="SplitButton">
                <Setter Property="Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />
                <Setter Property="Foreground" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />
                <Setter Property="BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}" />
                <Setter Property="BorderThickness" Value="{ThemeResource SplitButtonBorderThemeThickness}" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="FocusVisualMargin" Value="-1" />
                <Setter Property="IsTabStop" Value="True" />
                <Setter Property="Padding" Value="{ThemeResource ButtonPadding}" />
                <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="SplitButton">
                            <Grid x:Name="RootGrid" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}">
                                <Grid.BackgroundTransition>
                                    <BrushTransition Duration="0:0:0.1"/>
                                </Grid.BackgroundTransition>
                                <Grid.Resources>
                                    <!-- Override the style of the inner buttons so that they don't affect background/foreground/border colors -->
                                    <Style TargetType="Button">
                                        <Setter Property="Foreground" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />
                                        <Setter Property="BorderBrush" Value="Transparent" />
                                        <Setter Property="BorderThickness" Value="{ThemeResource SplitButtonBorderThemeThickness}" />
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                        <Setter Property="FontWeight" Value="Normal" />
                                        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                                        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                                        <Setter Property="FocusVisualMargin" Value="-3" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Grid x:Name="RootGrid" Background="Transparent">

                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="CommonStates">
                                                                <VisualState x:Name="Normal" >
                                                                    <VisualState.Setters>
                                                                        <Setter Target="RootGrid.Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />

                                                                    </VisualState.Setters>
                                                                </VisualState>

                                                                <VisualState x:Name="PointerOver">
                                                                    <VisualState.Setters>
                                                                        <Setter Target="RootGrid.Background" Value="{ThemeResource AccentFillColorSecondaryBrush}" />

                                                                    </VisualState.Setters>
                                                                </VisualState>

                                                                <VisualState x:Name="Pressed">
                                                                    <VisualState.Setters>
                                                                        <Setter Target="RootGrid.Background" Value="Transparent" />

                                                                    </VisualState.Setters>
                                                                </VisualState>

                                                                <VisualState x:Name="Disabled">
                                                                    <VisualState.Setters>
                                                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SplitButtonForegroundDisabled}" />
                                                                        <Setter Target="ContentPresenter.BorderBrush" Value="Transparent" />
                                                                        <Setter Target="RootGrid.Background" Value="Transparent" />
                                                                    </VisualState.Setters>
                                                                </VisualState>
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>
                                                        <ContentPresenter x:Name="ContentPresenter" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" local:AnimatedIcon.State="Normal" xmlns:local="using:Microsoft.UI.Xaml.Controls" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Grid.Resources>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" >
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />
                                                <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />
                                                <Setter Target="SecondaryButton.BorderBrush" Value="{x:Null}" />
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />

                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushDisabled}" />
                                                <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorDisabledBrush}" />
                                                <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorDisabledBrush}" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="FlyoutOpen">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorTertiaryBrush}" />
                                                <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorTertiaryBrush}" />
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorSecondaryBrush}" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="TouchPressed">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorTertiaryBrush}" />
                                                <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorTertiaryBrush}" />
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource ControlStrokeColorOnAccentDefaultBrush}" />
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorSecondaryBrush}" />
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorSecondaryBrush}" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PrimaryPointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />
                                                <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PrimaryPressed">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorTertiaryBrush}" />
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorSecondaryBrush}" />
                                                <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="SecondaryPointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />
                                                <Setter Target="SecondaryButton.BorderBrush" Value="{ThemeResource ControlStrokeColorOnAccentSecondaryBrush}" />
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="SecondaryPressed">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />
                                                <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorTertiaryBrush}" />
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorSecondaryBrush}" />

                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Checked">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                                <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                                <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedFlyoutOpen">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                                <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}" />
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                                <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedTouchPressed">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                                <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}" />
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                                <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPrimaryPointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                                <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}" />
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPointerOver}" />
                                                <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                                <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPrimaryPressed">
                                            <VisualState.Setters>
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                                <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                                <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                                <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedSecondaryPointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                                <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                                <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}" />
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPointerOver}" />
                                                <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedSecondaryPressed">
                                            <VisualState.Setters>
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                                <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                                <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                                <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />

                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SecondaryButtonPlacementStates">
                                        <VisualState x:Name="SecondaryButtonRight" />
                                        <VisualState x:Name="SecondaryButtonSpan">
                                            <VisualState.Setters>
                                                <Setter Target="SecondaryButton.(Grid.Column)" Value="0" />
                                                <Setter Target="SecondaryButton.(Grid.ColumnSpan)" Value="3" />

                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="PrimaryButtonColumn" Width="*" MinWidth="{ThemeResource SplitButtonPrimaryButtonSize}" />
                                    <ColumnDefinition x:Name="Separator" Width="1" />
                                    <ColumnDefinition x:Name="SecondaryButtonColumn" Width="{ThemeResource SplitButtonSecondaryButtonSize}" />
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="PrimaryBackgroundGrid" Background="{TemplateBinding Background}" Grid.ColumnSpan="2">
                                    <Grid.BackgroundTransition>
                                        <BrushTransition Duration="0:0:0.1"/>
                                    </Grid.BackgroundTransition>
                                </Grid>
                                <Grid x:Name="DividerBackgroundGrid" Width="1" Background="{ThemeResource ControlStrokeColorOnAccentTertiaryBrush}" Grid.Column="1" />
                                <Grid x:Name="SecondaryBackgroundGrid" Background="{TemplateBinding Background}" Grid.Column="2">
                                    <Grid.BackgroundTransition>
                                        <BrushTransition Duration="0:0:0.1"/>
                                    </Grid.BackgroundTransition>
                                </Grid>
                                <Button x:Name="PrimaryButton" Grid.Column="0" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="Transparent" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Padding="{TemplateBinding Padding}" IsTabStop="False" AutomationProperties.AccessibilityView="Raw" />
                                <Button x:Name="SecondaryButton" Grid.Column="2" Foreground="{ThemeResource TextOnAccentFillColorPrimaryBrush}" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="Transparent" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="0,0,12,0" IsTabStop="False" AutomationProperties.AccessibilityView="Raw">
                                    <Button.Content>
                                        <AnimatedIcon Height="12" Width="12" VerticalAlignment="Center" HorizontalAlignment="Right" AutomationProperties.AccessibilityView="Raw">
                                            <animatedvisuals:AnimatedChevronDownSmallVisualSource xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals" />
                                            <AnimatedIcon.FallbackIconSource>
                                                <FontIconSource FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="8" Glyph="&#xE96E;" IsTextScaleFactorEnabled="False" />
                                            </AnimatedIcon.FallbackIconSource>
                                        </AnimatedIcon>
                                    </Button.Content>
                                </Button>
                                <Grid x:Name="Border" Grid.ColumnSpan="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" />

                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <TextBlock Text="Type the name of a program, folder, document, or Internet resource, and Windows will open it for you." TextWrapping="WrapWholeWords" Margin="125, 25, 25, 25"/>
        <ComboBox x:Name="RunBox" KeyUp="RunBox_KeyUp" IsEditable="True" HorizontalAlignment="Stretch" Margin="125, 85, 25, 0"/>
        <TextBox x:Name="ArgsBox" Margin="126, 130, 25, 0" VerticalAlignment="Top"/>
        <Image Source="/Assets/RunBox.ico" Width="64" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="30, 15"/>
        <TextBlock Text="Open:" Margin="30, 90, 0, 0" HorizontalAlignment="Left"/>
        <TextBlock Text="Arguments:" Margin="30, 135, 0, 0" HorizontalAlignment="Left"/>
        <Border Grid.ColumnSpan="2" Height="75" Background="{ThemeResource SystemControlBackgroundAltMediumLowBrush}" VerticalAlignment="Bottom"/>
        <Grid Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="8"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="8"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <SplitButton Click="SplitButton_Click" Grid.Column="0" Style="{StaticResource AccentSplitButtonStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Content="Run" Margin="20, 20, 0, 20">
                <SplitButton.Flyout>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="Hover for information" IsEnabled="False"/>
                        <MenuFlyoutSeparator/>
                        <MenuFlyoutItem Text="Run as Administrator" Click="MenuFlyoutItem_Click_2" ToolTipService.ToolTip="Run the selected process as administrator. This option will attempt to launch the corresponding Rebound 11 counterpart of the chosen task.">
                            <MenuFlyoutItem.Icon>
                                <ImageIcon Source="/Assets/Administrator.ico"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="Run as Administrator (Legacy)" Click="MenuFlyoutItem_Click_3" ToolTipService.ToolTip="Rebound 11 replaces run entries of classic Windows applets with Rebound apps. To launch the legacy applets as administrator, use this option instead. (Also launches Task Manager without WinUI 3.)">
                            <MenuFlyoutItem.Icon>
                                <ImageIcon Source="/Assets/Administrator.ico"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="Run" Click="MenuFlyoutItem_Click_1" ToolTipService.ToolTip="This option will attempt to launch the corresponding Rebound 11 counterpart of the chosen task.">
                            <MenuFlyoutItem.Icon>
                                <ImageIcon Source="/Assets/EXE.ico"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="Run Legacy" Click="MenuFlyoutItem_Click" ToolTipService.ToolTip="Rebound 11 replaces run entries of classic Windows applets with Rebound apps. To launch the legacy applets, use this option instead. (Also launches Task Manager without WinUI 3.)">
                            <MenuFlyoutItem.Icon>
                                <ImageIcon Source="/Assets/ClassicEXE.ico"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="Clear history" Click="MenuFlyoutItem_Click_4" Visibility="Collapsed">
                            
                        </MenuFlyoutItem>
                    </MenuFlyout>
                </SplitButton.Flyout>
            </SplitButton>
            <Button Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Content="Cancel" Margin="0, 20, 0, 20" Click="Button_Click"/>
            <Button Grid.Column="4" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Content="Browse" Margin="0, 20, 20, 20"/>
        </Grid>
    </Grid>
</winuiex:WindowEx>
